/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package guidjisktra;

import djikstra.EntradaTabla;
import djikstra.Grafo;
import djikstra.Operaciones;
import djikstra.Tabla;
import java.awt.Image;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author JulioCésar
 */
public class GUI extends javax.swing.JFrame {
    public static final int TOLERANCIA = 35;
    
    ArrayList<Nodo> nodos;
    ArrayList<Enlace> enlaces;
    int nodo1X;
    int nodo1Y;
    String auxNodo1;
    Image router;
    public GUI() {
        initComponents();
        this.setLocationRelativeTo(null);
        iniciarMisComponentes();
        iniciarAuxiliares();
    }
    
    private void iniciarAuxiliares(){
        nodo1X = -1;
        nodo1Y = -1;
        auxNodo1 = "";
    }
    
    private void iniciarMisComponentes(){
        nodos = new ArrayList<>();
        enlaces = new ArrayList<>();
        router =  new 
            ImageIcon(getClass().getResource("/img/router.png")).getImage();
    }
    
    private DefaultTableModel newModel(){
        return new DefaultTableModel(new Object [][] {}, new String [] {"Nodo", "Inicio", "Fin"}) {
            Class[] types = new Class [] {java.lang.String.class, java.lang.String.class, java.lang.String.class};
            
            boolean[] canEdit = new boolean [] {false, false, false};

            @Override
            public Class getColumnClass(int columnIndex) {return types [columnIndex];}

            @Override
            public boolean isCellEditable(int rowIndex, int columnIndex) {return canEdit [columnIndex];}
        };
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel = new Panel(GUI.this);
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        buttonLine = new javax.swing.JButton();
        buttonRouter = new javax.swing.JButton();
        nodoInicio = new javax.swing.JComboBox<>();
        nodoFinal = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaRuteo = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        camino = new javax.swing.JTextField();
        reiniciar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        panel.setBackground(new java.awt.Color(255, 255, 255));
        panel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                panelMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout panelLayout = new javax.swing.GroupLayout(panel);
        panel.setLayout(panelLayout);
        panelLayout.setHorizontalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 716, Short.MAX_VALUE)
        );
        panelLayout.setVerticalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel3.setBackground(new java.awt.Color(0, 153, 255));

        jLabel1.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Dijkstra");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 47, Short.MAX_VALUE)
        );

        buttonLine.setBackground(new java.awt.Color(102, 204, 255));
        buttonLine.setFont(new java.awt.Font("Arial Black", 1, 11)); // NOI18N
        buttonLine.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/linea.png"))); // NOI18N
        buttonLine.setText("Línea");
        buttonLine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonLineActionPerformed(evt);
            }
        });

        buttonRouter.setBackground(new java.awt.Color(102, 204, 255));
        buttonRouter.setFont(new java.awt.Font("Arial Black", 1, 11)); // NOI18N
        buttonRouter.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/router.png"))); // NOI18N
        buttonRouter.setText("Router");
        buttonRouter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonRouterActionPerformed(evt);
            }
        });

        nodoInicio.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Nodo inicio", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial Black", 1, 11))); // NOI18N

        nodoFinal.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Nodo final", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial Black", 1, 11))); // NOI18N

        jButton1.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        jButton1.setText("Algoritmo");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        tablaRuteo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Nodo", "Inicial", "Final"
            }
        ));
        jScrollPane1.setViewportView(tablaRuteo);

        jLabel2.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Tabla de ruteo");

        jLabel3.setFont(new java.awt.Font("Arial Black", 1, 11)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Camino más corto");

        camino.setEditable(false);
        camino.setFont(new java.awt.Font("Arial Black", 0, 11)); // NOI18N
        camino.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        reiniciar.setText("Nueva topología");
        reiniciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reiniciarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 10, Short.MAX_VALUE)
                        .addComponent(buttonRouter)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonLine))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(nodoInicio, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(nodoFinal, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(camino)
                            .addComponent(reiniciar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonLine, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonRouter, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(nodoInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(nodoFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(camino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(reiniciar)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void panelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelMouseClicked
        if(buttonRouter.isSelected()){
            String nombre = 
                    JOptionPane.showInputDialog(this, 
                            "Nombre del nodo", 
                            "Nuevo nodo", 
                            JOptionPane.INFORMATION_MESSAGE);
            if(!existeNombre(nombre)){
                nodoInicio.addItem(nombre);
                nodoFinal.addItem(nombre);
                nodos.add(new Nodo(nombre,evt.getX(),evt.getY()));
            }   
            else
                JOptionPane.showConfirmDialog(this, 
                        "Ya existe un nodo con ese nombre", 
                        "Error", 
                        JOptionPane.DEFAULT_OPTION, 
                        JOptionPane.ERROR_MESSAGE);
        }
        //Establecer enlace
        else if (buttonLine.isSelected()){
            for(Nodo n: nodos){
                if(n.getNodoX()-TOLERANCIA <= evt.getX() && n.getNodoX()+TOLERANCIA >= evt.getX()
                   && n.getNodoY()-TOLERANCIA <= evt.getY() && n.getNodoY()+TOLERANCIA >=evt.getY()){
                    System.out.println("Router seleccionado " + n.getNombre());
                    if(nodo1X == -1 && nodo1Y ==-1){
                        nodo1X = n.getNodoX();
                        nodo1Y = n.getNodoY();
                        auxNodo1 = n.getNombre();
                    }else{
                        if(n.getNombre().equalsIgnoreCase(auxNodo1)){
                            JOptionPane.showConfirmDialog(this, 
                                    "No se puede crear un enlace en el mismo router", 
                                    "Error", 
                                    JOptionPane.DEFAULT_OPTION, 
                                    JOptionPane.ERROR_MESSAGE);
                            iniciarAuxiliares();
                        }
                        else{
                            int peso = Integer.parseInt(JOptionPane.showInputDialog(this, 
                                    "Introduzca el peso", 
                                    "Nuevo enlace", 
                                    JOptionPane.INFORMATION_MESSAGE));
                            enlaces.add(new Enlace(auxNodo1,n.getNombre(),
                                        nodo1X,nodo1Y,n.getNodoX(),
                                        n.getNodoY(),peso));
                            iniciarAuxiliares();
                        }
                            
                    }
                }
                    
            }
        }
        panel.repaint();
    }//GEN-LAST:event_panelMouseClicked

    
    
    
    /**
     * Método para saber si ya existe un nombre dentro de los nodos
     * @param nombre
     * @return 
     */
    private boolean existeNombre(String nombre){
        for(Nodo n: nodos){
            if(n.getNombre().equalsIgnoreCase(nombre))
                return true;
        }
        return false;
    }
    
    private void buttonRouterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonRouterActionPerformed
        buttonRouter.setSelected(true);
        buttonLine.setSelected(false);
    }//GEN-LAST:event_buttonRouterActionPerformed

    private void buttonLineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonLineActionPerformed
        buttonLine.setSelected(true);
        buttonRouter.setSelected(false);
    }//GEN-LAST:event_buttonLineActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if(nodos.size() == 0 || nodos == null)
            JOptionPane.showConfirmDialog(this, 
                                    "No hay ningún nodo", 
                                    "Error", 
                                    JOptionPane.DEFAULT_OPTION, 
                                    JOptionPane.ERROR_MESSAGE);
        else{
            String nodoIn = nodoInicio.getSelectedItem().toString();
            String nodoFi = nodoFinal.getSelectedItem().toString();
            if(!nodoIn.equalsIgnoreCase(nodoFi)){
                if(enlaces.size() != 0)
                    doProceso(nodoIn, nodoFi);
                else
                JOptionPane.showConfirmDialog(this, 
                                    "No existe ningún enlace", 
                                    "Error", 
                                    JOptionPane.DEFAULT_OPTION, 
                                    JOptionPane.ERROR_MESSAGE);
                
            }
            else
                JOptionPane.showConfirmDialog(this, 
                                    "El nodo de inicio no puede ser el mismo que el del final", 
                                    "Error", 
                                    JOptionPane.DEFAULT_OPTION, 
                                    JOptionPane.ERROR_MESSAGE);
        }
          
    }//GEN-LAST:event_jButton1ActionPerformed

    private void reiniciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reiniciarActionPerformed
        iniciarMisComponentes();
        iniciarAuxiliares();
        nodoInicio.removeAllItems();
        nodoFinal.removeAllItems();
        panel.repaint();
        tablaRuteo.setModel(newModel());
    }//GEN-LAST:event_reiniciarActionPerformed
    
    private void doProceso(String nodoInicial, String nodoFinal){
        Operaciones operaciones = new Operaciones();
        ArrayList<djikstra.Nodo> nodosT = new ArrayList<>();
        operaciones.iniciarNodos(nodosT, enlaces);
        Grafo grafo = new Grafo(nodosT);
        Tabla tabla = operaciones.djkistra(grafo, nodoInicial);
        ArrayList<String> caminoMasCorto = 
                operaciones.caminoMasCorto(grafo, tabla, nodoInicial, nodoFinal);
        ArrayList<EntradaTabla> entradas = tabla.getEntradas();
        DefaultTableModel t = newModel();
        for(EntradaTabla a : entradas)
            t.addRow(new Object[]{a.getNodo(),a.getInicio(),a.getFin()});
        tablaRuteo.setModel(t);
        camino.setText(formatearCamino(caminoMasCorto));
    }
    
    private String formatearCamino(ArrayList<String> camino){
        String caminoFormateado = "";
        for(int i = camino.size()-1; i>=0; i--){
            if(i == 0)
                caminoFormateado += camino.get(i);
            else
                caminoFormateado += camino.get(i) + "->";
        }
        return caminoFormateado;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonLine;
    private javax.swing.JButton buttonRouter;
    private javax.swing.JTextField camino;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> nodoFinal;
    private javax.swing.JComboBox<String> nodoInicio;
    private javax.swing.JPanel panel;
    private javax.swing.JButton reiniciar;
    private javax.swing.JTable tablaRuteo;
    // End of variables declaration//GEN-END:variables
}
